{"version":3,"sources":["layout/Copyright.tsx","layout/theme.tsx","components/ToggleHlt.tsx","layout/Options.tsx","layout/Title.tsx","layout/AppLayout.tsx","layout/styles.tsx","components/DisplayImage.tsx","components/FindMore.tsx","api/baseUrl.tsx","errors/ErrorMessage.tsx","errors/ErrorBackdrop.tsx","utils/AgoTooltip.tsx","components/Comment.tsx","components/PictureComments.tsx","api/usePictureComments.tsx","components/CustomLink.tsx","components/WatermarkFoundExtensionPanel.tsx","components/WatermarkFound.tsx","components/WatermarkNotFound.tsx","api/fetchPictureData.tsx","components/DisplayMetadata.tsx","utils/convertToBase64.tsx","utils/trimBase64ContentType.tsx","errors/ErrorBounduary.tsx","components/Main.tsx","i18n/LanguageProvider.tsx","App.tsx","index.tsx"],"names":["Copyright","Typography","variant","color","Link","href","Date","getFullYear","theme","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","ToggleHlt","React","useState","localStorage","getItem","checked","setChecked","useEffect","setItem","FormControlLabel","control","Checkbox","onChange","event","target","inputProps","label","id","useStyles","makeStyles","createStyles","padding","spacing","Options","classes","anchorEl","setAnchorEl","open","Boolean","undefined","Tooltip","title","IconButton","aria-label","onClick","currentTarget","style","grey","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","titleContent","display","flexDirection","justifyContent","Title","AppBar","position","Toolbar","AppLayout","this","props","root","CssBaseline","Container","component","maxWidth","gutterBottom","Divider","divider","children","footer","PureComponent","withStyles","backgroundColor","background","paper","minWidth","minHeight","marginTop","image","maxHeight","margin","DisplayImage","pictureUrl","src","alt","alignItems","FindMore","uuid","buttonText","Button","preventDefault","chrome","tabs","create","url","tab","console","log","handleClick","baseUrl","Alert","elevation","width","ErrorMessage","messageId","severity","defaultProps","backdrop","zIndex","drawer","ErrorBackdrop","setOpen","Backdrop","window","close","AgoTooltip","date","endsWith","getParsedDate","toString","fromNow","timestamp","Comment","comment","Grid","container","direction","item","authorName","createdDate","text","table","heading","fontSize","pxToRem","fontWeight","fontWeightRegular","PictureComments","comments","setComments","error","setError","a","requestOptions","method","headers","fetch","then","response","json","catch","err","usePictureComments","empty","content","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","TableContainer","Table","size","TableBody","map","_","TableRow","key","TableCell","align","CustomLink","hlt","createNewTab","useCallback","windows","update","WINDOW_ID_CURRENT","focused","WatermarkFoundExtensionPanel","info","Fragment","defaultExpanded","scope","pictureDTO","ownerName","author","tags","v","displayTags","WatermarkFound","WatermarkNotFound","fetchPictureData","b64","pageUrl","body","JSON","stringify","pictureBase64","data","responseStatus","status","DisplayMetadata","state","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","dataUrl","spl","split","trimBase64ContentType","setState","Skeleton","height","animation","Component","ErrorBoundary","hasError","errorInfo","Main","runtime","sendMessage","appReady","messages","pl","messages_pl","en","messages_en","language","navigator","LanguageProvider","locale","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19ad392a.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nexport function Copyright() {\n  return(\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://picwatermark.pl\">\n        Picwatermark.pl\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: \"'Lato', sans-serif\",\n  },\n  palette: {\n    primary: {\n      main: \"#0075c0\",\n    },\n    secondary: {\n      main: \"#FFCA28\",\n    },\n  },\n});\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FormattedMessage } from 'react-intl';\n\nexport const ToggleHlt = () => {\n  const [checked, setChecked] = React.useState<boolean>(\n    localStorage.getItem('openHlt') === 'true' || false\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem('openHlt', `${checked}`);\n  }, [checked]);\n\n  const handleChangeCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={checked}\n          onChange={handleChangeCheckbox}\n          color=\"primary\"\n          inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n      }\n      label={<FormattedMessage id=\"settings.hltToggle\" />}\n    />\n  );\n};\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport IconButton from '@material-ui/core/IconButton';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport grey from '@material-ui/core/colors/grey';\nimport { ToggleHlt } from '../components/ToggleHlt';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nexport default function Options() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClickSettings = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseSettings = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'popover' : undefined;\n\n  return (\n    <div>\n      <Tooltip title={<FormattedMessage id=\"settings\" />}>\n        <IconButton aria-label=\"settings-icon\" onClick={handleClickSettings}>\n          <SettingsIcon style={{ color: grey[50] }} />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleCloseSettings}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <Typography className={classes.typography}>\n          <ToggleHlt />\n        </Typography>\n      </Popover>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Options from './Options';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  titleContent: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n}));\n\nexport const Title = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar className={classes.titleContent}>\n        <Typography variant=\"subtitle1\" color=\"inherit\">\n          Picwatermark\n        </Typography>\n        <Options />\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport {\n  Container,\n  MuiThemeProvider,\n  CssBaseline,\n  Typography,\n  Divider,\n  withStyles,\n} from \"@material-ui/core\";\nimport { Copyright } from \"./Copyright\";\nimport { theme } from \"./theme\";\nimport { styles } from \"./styles\";\nimport { Title } from \"./Title\";\n\nclass AppLayout extends React.PureComponent<any> {\n  render(): React.ReactElement  {\n    return (\n      <div className={this.props.classes.root}>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <Title />\n          <Container\n            component=\"main\"\n            className={this.props.classes.main}\n            maxWidth=\"lg\"\n          >\n            <Typography variant=\"h4\" component=\"h3\" gutterBottom>\n              <Divider className={this.props.classes.divider} />\n              {this.props.children}\n            </Typography>\n          </Container>\n          <footer className={this.props.classes.footer}>\n            <Copyright />\n          </footer>\n        </MuiThemeProvider>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(AppLayout);","import { Theme } from '@material-ui/core';\n\nexport const styles = (theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '500px',\n    minHeight: '100vh',\n  },\n  main: {\n    padding: theme.spacing(2, 3),\n  },\n  divider: {\n    display: 'none',\n  },\n  footer: {\n    padding: theme.spacing(2, 3),\n    marginTop: 'auto',\n    backgroundColor: theme.palette.grey[200],\n  },\n});\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\ninterface Props {\n  pictureUrl: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    image: {\n      maxWidth: '70%',\n      maxHeight: '70%',\n    },\n    typography: {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(2, 0),\n    },\n  })\n);\n\nexport const DisplayImage = ({ pictureUrl }: Props) => {\n  const classes = useStyles();\n  return (\n    <Typography className={classes.typography} gutterBottom>\n      <img className={classes.image} src={pictureUrl} alt=\"\" />\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Typography, Button, createStyles } from \"@material-ui/core\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      margin: theme.spacing(2, 0),\n      alignItems: \"baseline\",\n    },\n  })\n);\n\ninterface Props {\n  uuid: string | null;\n}\n\n// https://stackoverflow.com/questions/30253790/pass-data-from-chrome-extension-to-webpage/30254532\n// Pass pageUrl/base to server eer\n\nexport default function FindMore({ uuid }: Props) {\n  const handleClick: any = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    chrome.tabs.create({\n      url:\n        uuid !== null\n          ? `https://picwatermark.pl/#/picture/${uuid}`\n          : `https://picwatermark.pl`,\n    }, (tab) => {\n      console.log(tab)\n    });\n  };\n\n  let buttonText: any = <FormattedMessage id=\"find-more.button.seeMore\" />;\n\n  if (uuid === null) {\n    buttonText = <FormattedMessage id=\"find-more.button.signFile\" />;\n  }\n\n  const classes = useStyles();\n  return (\n    <Typography className={classes.typography} gutterBottom>\n      <Button\n        onClick={(event) => handleClick(event)}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {buttonText}\n      </Button>\n    </Typography>\n  );\n}\n","export const baseUrl: string = 'https://picwatermark.pl/api/core/v1';\n\n// dev url\n// export const prodBaseUrl: string = 'https://dev.picwatermark.pl/api/core/v1';\n","import React from 'react';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const ErrorMessage = ({ messageId }: { messageId?: string }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Alert severity=\"error\">\n        <FormattedMessage id={messageId} />\n      </Alert>\n    </div>\n  );\n};\n\nErrorMessage.defaultProps = {\n  messageId: 'main.error',\n};\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { ErrorMessage } from './ErrorMessage';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n      padding: theme.spacing(0, 3),\n    },\n  })\n);\n\nexport const ErrorBackdrop = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n    window.close();\n  };\n\n  return (\n    <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n      <ErrorMessage />\n    </Backdrop>\n  );\n};\n","import React, {PureComponent} from \"react\";\nimport Moment from \"react-moment\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport type Props = {\n  date: string | Date | number;\n};\n\nexport class AgoTooltip extends PureComponent<Props> {\n\n  getParsedDate() {\n    const {date} = this.props;\n    if (typeof(date) !== 'string') {\n      return date;\n    }\n    if (date.endsWith('+0000')) {\n      return date;\n    }\n    return `${date}+0000`;\n  }\n\n  render() {\n    const date = this.getParsedDate();\n\n    return (\n      <Tooltip title={<Moment>{date.toString()}</Moment>}>\n        <Moment fromNow>{date.toString()}</Moment>\n      </Tooltip>\n    );\n  }\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AgoTooltip } from \"../utils/AgoTooltip\";\n\ninterface Comment {\n  comment: Details;\n}\n\ninterface Details {\n  id: number;\n  text: string;\n  pictureUuid: string;\n  authorId: number;\n  authorName: string;\n  authorEmail: string;\n  violation: boolean;\n  createdDate: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    timestamp: {\n      color: \"#888\",\n    },\n  })\n);\n\nexport default function Comment({ comment }: Comment) {\n  const classes = useStyles();\n  const renderInfo = () => {\n    return (\n      <Grid item>\n        <Grid container direction={\"column\"}>\n          <Grid item>\n            <Typography variant={\"subtitle2\"}>{comment.authorName}</Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant={\"body2\"} className={classes.timestamp}>\n              {comment.createdDate ? (\n                <AgoTooltip date={comment.createdDate} />\n              ) : null}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  };\n  return (\n    <Grid container direction={\"column\"} spacing={1}>\n      <Grid item>\n        <Grid container spacing={1} alignItems={\"center\"}>\n          {renderInfo()}\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Typography variant={\"subtitle1\"}>{comment.text}</Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { usePictureComments } from '../api/usePictureComments';\nimport Grid from '@material-ui/core/Grid';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport { ErrorBackdrop } from '../errors/ErrorBackdrop';\nimport Comment from './Comment';\n\ninterface Props {\n  uuid: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 550,\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  })\n);\n\nexport default function PictureComments({ uuid }: Props) {\n  const classes = useStyles();\n  const [comments, error] = usePictureComments(uuid);\n\n  if (comments.empty) {\n    return null;\n  }\n\n  if (error) {\n    return <ErrorBackdrop />;\n  }\n\n  if (comments?.content) {\n    return (\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>\n            <FormattedMessage id=\"watermark-found.comments\" />\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableBody>\n                {comments.content.map((_: any) => (\n                  <TableRow key={_.id}>\n                    <TableCell align=\"left\">\n                      <Grid item>\n                        <Comment comment={_} />\n                      </Grid>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n\n  return null;\n}\n","import { useEffect, useState } from 'react';\nimport { baseUrl } from './baseUrl';\n\nexport const usePictureComments = (uuid: string) => {\n  const [comments, setComments] = useState<any>([]);\n  const [error, setError] = useState<any>('');\n\n  useEffect(() => {\n    (async () => {\n      const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      };\n      await fetch(`${baseUrl}/picture/${uuid}/comments`, requestOptions)\n        .then((response) => response.json())\n        .then((response) => setComments(response))\n        .catch((err) => setError(err));\n    })();\n  }, [uuid]);\n  return [comments, error];\n};\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\n\ninterface Props {\n  url: string;\n  hlt?: boolean;\n}\n\n//todo naprawa buga powodujące otworzenie pustej karty -> url.length(chyba...)\n// https://picwatermark.pl/#/picture/c4897e6b-cad4-45cf-bf94-490b7da32e31\n\nexport const CustomLink = ({ url, hlt }: Props) => {\n  const createNewTab = React.useCallback(() => {\n    chrome.tabs.create(\n      {\n        url: url,\n      },\n      () => {\n        chrome.windows.update(chrome.windows.WINDOW_ID_CURRENT, {\n          focused: true,\n        });\n      }\n    );\n  }, [url]);\n\n  React.useEffect(() => {\n    if (url && hlt && (localStorage.getItem('openHlt') === 'true')) {\n      createNewTab();\n    }\n  }, [hlt, createNewTab, url]);\n\n  const onClickHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    createNewTab();\n  };\n\n  return (\n    <Link onClick={onClickHandler} component=\"button\" variant=\"body2\">\n      {url}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Chip from '@material-ui/core/Chip/Chip';\nimport { PictureDTO } from '../api/models/PictureDTO';\nimport PictureComments from './PictureComments';\nimport { CustomLink } from './CustomLink';\n\ninterface MyProps {\n  info: PictureDTO;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  })\n);\n\nconst displayTags = (pictureDTO: PictureDTO) => {\n  if (!pictureDTO.tags) {\n    return null;\n  }\n  pictureDTO.tags.map((v: string) => <Chip key={v} label={v} />);\n};\n\nexport const WatermarkFoundExtensionPanel = ({ info }: MyProps) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <ExpansionPanel defaultExpanded>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel-metadata-content\"\n          id=\"panel-metadata-header\"\n        >\n          <Typography className={classes.heading}>\n            <FormattedMessage id=\"watermark-found.basic-info\" />\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <TableContainer>\n            <Table size=\"small\" aria-label=\"a dense table\">\n              <TableBody>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <FormattedMessage id=\"watermark-found.owner\" />\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    {info.pictureDTO.ownerName}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <FormattedMessage id=\"watermark-found.author\" />\n                  </TableCell>\n                  <TableCell align=\"left\">{info.pictureDTO.author}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <FormattedMessage id=\"watermark-found.title\" />\n                  </TableCell>\n                  <TableCell align=\"left\">{info.pictureDTO.title}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <FormattedMessage id=\"watermark-found.url\" />\n                  </TableCell>\n                  <TableCell align=\"left\"><CustomLink url={info.pictureDTO.url} /></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <FormattedMessage id=\"watermark-found.hlt\" />\n                  </TableCell>\n                  <TableCell align=\"left\"><CustomLink url={info.pictureDTO.hlt} hlt/></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <FormattedMessage id=\"watermark-found.tags\" />\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    {displayTags(info.pictureDTO)}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <PictureComments uuid={info.pictureDTO.uuid} />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport FindMore from './FindMore';\nimport { WatermarkFoundExtensionPanel } from './WatermarkFoundExtensionPanel';\n\ninterface Props {\n  info: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  })\n);\n\nexport const WatermarkFound = ({ info }: Props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <WatermarkFoundExtensionPanel info={info} />\n      <FindMore uuid={info.pictureDTO.uuid} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FormattedMessage } from \"react-intl\";\nimport FindMore from \"./FindMore\";\n\nexport const WatermarkNotFound: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" component=\"h5\" gutterBottom>\n        <FormattedMessage id=\"watermark-not-found.message\" />\n      </Typography>\n      <FindMore uuid={null} />\n    </React.Fragment>\n  );\n};\n","import { baseUrl } from './baseUrl';\n\nexport const fetchPictureData = async (b64: string, pageUrl: string) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ pictureBase64: b64, url: pageUrl }),\n  };\n  const response = await fetch(`${baseUrl}/picture/decode`, requestOptions);\n  const data = await response.json();\n  return { data, responseStatus: response.status };\n};\n","import React from 'react';\nimport { convertToBase64 } from '../utils/convertToBase64';\nimport { trimBase64ContentType } from '../utils/trimBase64ContentType';\nimport { WatermarkFound } from './WatermarkFound';\nimport { WatermarkNotFound } from './WatermarkNotFound';\nimport { ErrorMessage } from '../errors/ErrorMessage';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { fetchPictureData } from '../api/fetchPictureData';\nimport { ErrorBackdrop } from '../errors/ErrorBackdrop';\n\ninterface MyProps {\n  pictureUrl: string;\n  pageUrl: string;\n}\n\ninterface MyState {\n  data: object;\n  responseStatus: number | null;\n}\n\nexport class DisplayMetadata extends React.Component<MyProps, MyState> {\n  state = {\n    data: {},\n    responseStatus: null,\n  };\n\n  componentDidMount() {\n    const { pictureUrl, pageUrl } = this.props;\n    convertToBase64(pictureUrl).then((dataUrl) => {\n      const b64 = trimBase64ContentType(dataUrl as any);\n      fetchPictureData(b64, pageUrl).then((response) => {\n        this.setState({\n          data: response.data,\n          responseStatus: response.responseStatus,\n        });\n      });\n    });\n  }\n\n  render() {\n    const { responseStatus } = this.state\n    if (responseStatus) {\n      if (responseStatus === 200) {\n        return <WatermarkFound info={this.state.data} />;\n      }\n      if (responseStatus === 404) {\n        return <WatermarkNotFound />;\n      }\n      if (responseStatus === 422) {\n        return <ErrorMessage messageId={\"lowResolution.error\"} />;\n      }\n      return <ErrorBackdrop />\n    }\n    return (\n      <Skeleton variant=\"rect\" width={636} height={246} animation=\"wave\" />\n    );\n  }\n}\n","export const convertToBase64 = (url: string) =>\n  fetch(url)\n    .then((response) => response.blob())\n    .then(\n      (blob) =>\n        new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onloadend = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsDataURL(blob);\n        })\n    );\n","export function trimBase64ContentType(data: string) {\n  const spl = data.split(\",\", 2);\n  return spl[1] || spl[0];\n}\n","import React from 'react';\nimport { ErrorBackdrop } from './ErrorBackdrop';\n\nclass ErrorBoundary extends React.Component<any, { hasError: boolean }> {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    console.error('Error Boundary catch an error', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorBackdrop />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { DisplayImage } from './DisplayImage';\nimport { DisplayMetadata } from './DisplayMetadata';\nimport ErrorBoundary from '../errors/ErrorBounduary';\n\ninterface MyState {\n  pictureUrl: string;\n  pageUrl: string;\n}\n\nexport class Main extends React.Component<{}, MyState> {\n  state = { pictureUrl: '', pageUrl: '' };\n\n  componentDidMount() {\n    chrome.runtime.sendMessage({ appReady: true }, (response) => {\n      const { pictureUrl, pageUrl } = response;\n      this.setState({\n        pictureUrl: pictureUrl,\n        pageUrl: pageUrl,\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.pictureUrl && !this.state.pageUrl) {\n      return (\n        <Skeleton variant=\"rect\" width={600} height={300} animation=\"wave\" />\n      );\n    }\n    return (\n      <ErrorBoundary>\n        <DisplayImage pictureUrl={this.state.pictureUrl} />\n        <DisplayMetadata\n          pictureUrl={this.state.pictureUrl}\n          pageUrl={this.state.pageUrl}\n        />\n      </ErrorBoundary>\n    );\n  }\n}\n","import React from \"react\";\nimport messages_pl from \"./translations/pl.json\";\nimport messages_en from \"./translations/en.json\";\nimport { IntlProvider } from \"react-intl\";\n\nconst messages: any = {\n  pl: messages_pl,\n  en: messages_en,\n};\n\nconst language = navigator.language.split(/[-_]/)[0]; // language without region code\n\nconst languageCheck = () => {\n  return messages[language] === \"pl\" || \"en\"\n    ? messages[language]\n    : messages[\"en\"];\n};\n\nexport const LanguageProvider: React.FC = (props) => {\n  return (\n    <IntlProvider\n      locale={language}\n      messages={languageCheck()}\n    >\n      {props.children}\n    </IntlProvider>\n  );\n};\n","import React, { PureComponent } from \"react\";\nimport AppLayout from \"./layout/AppLayout\";\nimport { Main } from \"./components/Main\";\nimport { LanguageProvider } from \"./i18n/LanguageProvider\";\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <LanguageProvider>\n        <AppLayout>\n          <Main />\n        </AppLayout>\n      </LanguageProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}