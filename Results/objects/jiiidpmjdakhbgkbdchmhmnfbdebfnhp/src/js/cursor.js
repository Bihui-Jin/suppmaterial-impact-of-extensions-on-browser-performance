var RULERS=RULERS||{};RULERS.cursor={mouseHandler:a=>{if(!RULERS.vars.enabled||RULERS.vars.modalActive)return;const{overlay:b}=RULERS.vars.el,c=a.clientX-RULERS.settings.rulerWidth,d=a.clientY-RULERS.settings.rulerWidth;RULERS.vars.mousePos.x=c,RULERS.vars.mousePos.y=d,RULERS.drawRulers.vertical(),RULERS.drawRulers.horizontal(),RULERS.vars.hoveredEl=0<c&&0<d&&c<(RULERS.vars.infoPanelEnabled?window.innerWidth-300:window.innerWidth)?RULERS.helpers.elementAtPos(c,d):null;let e=!1;for(var f=0;f<RULERS.vars.guides.length;f++)"v"===RULERS.vars.guides[f].direction?3>Math.abs(c-RULERS.vars.guides[f].position+RULERS.vars.scrollPos.x)&&(e=RULERS.vars.guides[f]):3>Math.abs(d-RULERS.vars.guides[f].position+RULERS.vars.scrollPos.y)&&(e=RULERS.vars.guides[f]);e?(RULERS.drawOverlay.guides({ctx:RULERS.vars.ctx.overlay,canvas:b}),RULERS.vars.el.container.classList.add("removeGuide")):(RULERS.drawOverlay.guides({ctx:RULERS.vars.ctx.overlay,canvas:b}),RULERS.vars.el.container.classList.contains("removeGuide")&&RULERS.vars.el.container.classList.remove("removeGuide")),RULERS.overlay.draw()}};