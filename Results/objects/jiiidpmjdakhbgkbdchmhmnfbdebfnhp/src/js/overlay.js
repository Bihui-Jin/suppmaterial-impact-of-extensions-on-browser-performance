var RULERS=RULERS||{};RULERS.overlay={init:()=>{RULERS.vars.enabled&&RULERS.overlay.initCanvas()},initCanvas:()=>{const a=RULERS.vars.el.overlay.offsetWidth*RULERS.vars.scale,b=RULERS.vars.el.overlay.offsetHeight*RULERS.vars.scale,c=[RULERS.vars.scale,RULERS.vars.scale];RULERS.vars.ctx.overlay=RULERS.vars.el.overlay.getContext("2d"),RULERS.vars.ctx.overlay.scale(...c),RULERS.vars.el.overlay.width=a,RULERS.vars.el.overlay.height=b,RULERS.vars.layers.design.scale(...c),RULERS.vars.layers.design.canvas.width=a,RULERS.vars.layers.design.canvas.height=b,RULERS.vars.layers.distance.scale(...c),RULERS.vars.layers.distance.canvas.width=a,RULERS.vars.layers.distance.canvas.height=b,RULERS.vars.layers.grid.scale(...c),RULERS.vars.layers.grid.canvas.width=a,RULERS.vars.layers.grid.canvas.height=b,RULERS.vars.layers.guides.scale(...c),RULERS.vars.layers.guides.canvas.width=a,RULERS.vars.layers.guides.canvas.height=b,RULERS.drawRulers.draw(),RULERS.overlay.draw()},clickable:a=>{RULERS.vars.enabled&&(a?RULERS.vars.el.container.classList.add("clickable"):RULERS.vars.el.container.classList.contains("clickable")&&RULERS.vars.el.container.classList.remove("clickable"))},overlayClickHandler:a=>{if(RULERS.vars.modalActive&&a.target===RULERS.vars.el.container&&!RULERS.vars.el.modal.classList.contains("RULERS__modal--agressive"))RULERS.modal.close();else if(RULERS.vars.modalActive&&a.target===RULERS.vars.el.container&&RULERS.vars.el.modal.classList.contains("RULERS__modal--agressive"))return;if(0<RULERS.vars.mousePos.x&&0<RULERS.vars.mousePos.y&&!RULERS.vars.modalActive){const a=RULERS.helpers.elementAtPos(RULERS.vars.mousePos.x,RULERS.vars.mousePos.y);RULERS.vars.selectedEl=a&&RULERS.vars.selectedEl!==a&&!["BODY","HTML"].includes(a.tagName)?a:null,RULERS.infoPanel.changeEl(),RULERS.overlay.draw(),RULERS.drawRulers.draw()}},drawLine:(a,b,c,d)=>{const{overlay:e}=RULERS.vars.ctx,{correct:f,correctSize:g}=RULERS.helpers;e.save(),e.strokeStyle=RULERS.themes.current.hoveredEl,e.setLineDash([g(3),g(4)]),e.beginPath(),e.moveTo(f(a),f(b)),e.lineTo(f(c),f(d)),e.stroke(),e.restore()},draw:()=>{const a=RULERS.vars.ctx.overlay,b=RULERS.vars.el.overlay,{layers:c}=RULERS.vars;b&&a&&(RULERS.drawOverlay.clear({ctx:c.design}),RULERS.drawOverlay.clear({ctx:c.distance}),RULERS.drawOverlay.clear({ctx:c.grid}),RULERS.drawOverlay.clear({ctx:c.guides}),RULERS.drawOverlay.guides({ctx:c.guides,showTmpGuide:!0}),RULERS.grid.draw({ctx:c.grid}),RULERS.overlay.drawDistance({ctx:c.distance}),RULERS.design.draw(()=>{RULERS.drawOverlay.clear({ctx:a,canvas:b}),a.drawImage(c.design.canvas,0,0),a.drawImage(c.distance.canvas,0,0),a.drawImage(c.guides.canvas,0,0),a.drawImage(c.grid.canvas,0,0)}))},drawDistance:({ctx:a,canvas:b})=>{const{selectedEl:c,hoveredEl:d}=RULERS.vars;if(d===c||!c||!d)return;const e=c.getBoundingClientRect(),f=d.getBoundingClientRect();let g,h,i,j;e.x<f.x?(g={el:c,rect:e},h={el:d,rect:f}):(g={el:d,rect:f},h={el:c,rect:e}),e.y<f.y?(i={el:c,rect:e},j={el:d,rect:f}):(i={el:d,rect:f},j={el:c,rect:e});let k=70>g.rect.x?70:0,l=40>i.rect.y?40:0;j.rect.y<i.rect.y+i.rect.height&&(RULERS.drawOverlay.distanceArrow({ctx:a,canvas:b,from:{x:g.rect.x+k-40,y:i.rect.y},to:{x:g.rect.x+k-40,y:j.rect.y},label:!0,color:RULERS.themes.current.hoveredEl}),RULERS.overlay.drawLine(g.rect.x+k-45,f.y,f.x,f.y)),j.rect.y>i.rect.y+i.rect.height&&(RULERS.drawOverlay.distanceArrow({ctx:a,canvas:b,from:{x:g.rect.x+k-40,y:i.rect.y+i.rect.height},to:{x:g.rect.x+k-40,y:j.rect.y},label:!0,color:RULERS.themes.current.hoveredEl}),i.el===c&&RULERS.overlay.drawLine(g.rect.x+k-45,j.rect.y,j.rect.x,j.rect.y),j.el===c&&RULERS.overlay.drawLine(g.rect.x+k-45,i.rect.y+i.rect.height,i.rect.x,i.rect.y+i.rect.height)),j.rect.y+j.rect.height<i.rect.y+i.rect.height&&(RULERS.drawOverlay.distanceArrow({ctx:a,canvas:b,from:{x:g.rect.x+k-40,y:i.rect.y+i.rect.height},to:{x:g.rect.x+k-40,y:j.rect.y+j.rect.height},label:!0,color:RULERS.themes.current.hoveredEl}),RULERS.overlay.drawLine(g.rect.x+k-45,f.y+f.height,f.x,f.y+f.height)),g.rect.x+g.rect.width>h.rect.x&&(RULERS.drawOverlay.distanceArrow({ctx:a,canvas:b,from:{x:g.rect.x,y:i.rect.y+l-20},to:{x:h.rect.x,y:i.rect.y+l-20},label:!0,color:RULERS.themes.current.hoveredEl}),RULERS.overlay.drawLine(f.x,i.rect.y+l-25,f.x,f.y)),g.rect.x+g.rect.width<h.rect.x&&(RULERS.drawOverlay.distanceArrow({ctx:a,canvas:b,from:{x:g.rect.x+g.rect.width,y:i.rect.y+l-20},to:{x:h.rect.x,y:i.rect.y+l-20},label:!0,color:RULERS.themes.current.hoveredEl}),g.el===c&&RULERS.overlay.drawLine(h.rect.x,i.rect.y+l-25,h.rect.x,f.y),h.el===c&&RULERS.overlay.drawLine(g.rect.x+g.rect.width,i.rect.y+l-25,g.rect.x+g.rect.width,f.y)),g.rect.x+g.rect.width>h.rect.x&&(RULERS.drawOverlay.distanceArrow({ctx:a,canvas:b,from:{x:g.rect.x+g.rect.width,y:i.rect.y+l-20},to:{x:h.rect.x+h.rect.width,y:i.rect.y+l-20},label:!0,color:RULERS.themes.current.hoveredEl}),RULERS.overlay.drawLine(f.x+f.width,i.rect.y+l-25,f.x+f.width,f.y))}};