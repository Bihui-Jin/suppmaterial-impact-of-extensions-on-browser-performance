var RULERS=RULERS||{};RULERS.drawRulers={draw:()=>{RULERS.drawRulers.vertical(),RULERS.drawRulers.horizontal(),document.fonts.ready.then(()=>{RULERS.drawRulers.vertical(),RULERS.drawRulers.horizontal()})},vertical:(a=RULERS.vars.scrollPos.y)=>{if(RULERS.vars.el.leftRuler){const{left:b}=RULERS.vars.ctx;b&&(RULERS.vars.gridHeight=Math.ceil(RULERS.vars.el.leftRuler.height/(RULERS.settings.gridSize*RULERS.vars.scale)),b.clearRect(0,0,RULERS.vars.el.leftRuler.width*RULERS.vars.scale,RULERS.vars.el.leftRuler.height*RULERS.vars.scale),RULERS.drawRulers.drawRulerElements(b,'h',a))}},horizontal:(a=RULERS.vars.scrollPos.x)=>{if(RULERS.vars.el.topRuler){const{top:b}=RULERS.vars.ctx;b&&(RULERS.vars.gridWidth=Math.ceil(RULERS.vars.el.topRuler.width/(RULERS.settings.gridSize*RULERS.vars.scale)),b.clearRect(0,0,RULERS.vars.el.topRuler.width*RULERS.vars.scale,RULERS.vars.el.topRuler.height*RULERS.vars.scale),RULERS.drawRulers.drawRulerElements(b,'v',a))}},drawRulerElements:(a,b,c)=>{RULERS.drawRulers.drawCursor(b,a),RULERS.drawRulers.drawGuides(b,a),RULERS.drawRulers.drawElement(RULERS.vars.hoveredEl,RULERS.themes.current.hoveredEl,a,b),RULERS.drawRulers.drawElement(RULERS.vars.selectedEl,RULERS.themes.current.selectedEl,a,b),RULERS.drawRulers.drawBase(a,b,c)},drawCursor:(a,b)=>{const c='h'===a?RULERS.vars.mousePos.y:RULERS.vars.mousePos.x;0<c&&RULERS.drawRulers.addLine(c,RULERS.themes.current.cursor,b,a)},drawGuides:(a,b)=>{if(RULERS.vars.guides&&RULERS.vars.guides.length)for(var c=0;c<RULERS.vars.guides.length;c++){const d='h'===a?RULERS.vars.scrollPos.y:RULERS.vars.scrollPos.x;RULERS.vars.guides[c].direction===a&&RULERS.drawRulers.addLine(RULERS.vars.guides[c].position-d,RULERS.themes.current.guide,b,a)}},drawElement:(a,b,c,d)=>{if(a){const{rulerWidth:e}=RULERS.settings,{correct:f,correctSize:g}=RULERS.helpers,{scale:h}=RULERS.vars,i=a.getBoundingClientRect(),j='h'===d?[-1,f(i.top),e*h+1,g(i.height)]:[f(i.left),-1,g(i.width),e*h+1];c.save(),c.beginPath(),c.fillStyle=b,c.strokeStyle=b,c.globalAlpha=.1,c.rect(...j),c.fill(),c.globalAlpha=1,c.stroke(),c.closePath(),c.restore()}},drawBase:(a,b,c)=>{const{rulerWidth:d}=RULERS.settings,{line:e}=RULERS.themes.current,{gridSize:f,largeLine:g}=RULERS.settings,{scale:h,gridHeight:j,gridWidth:k}=RULERS.vars,{correctSize:l}=RULERS.helpers,m='h'===b;let n=('h'===b?j:k)+4,o=0;for(c+=.5,a.save(),a.beginPath(),a.strokeStyle=e;0<=n;){let b=-(c*h)+f*h*o;if(b>=-(f*h)){if(0==o%g){a.save(),a.moveTo(...(m?[0,b]:[b,0])),a.translate(...(m?[0,b+4*h]:[b-7*h,10*h])),a.rotate(m?-Math.PI/2:0),a.font=`${RULERS.settings.fontSize*h}px Varela Round`,a.fillStyle=RULERS.themes.current.text,a.textAlign=m?'right':'left';const c=[0,RULERS.settings.fontSize*h],d=[10*h,(-10+RULERS.settings.fontSize)*h];a.fillText(o*f,...(m?c:d)),a.restore()}else a.moveTo(...(m?[3*(d*h/4),b]:[b,3*(d*h/4)]));a.lineTo(...(m?[l(d),b]:[b,l(d)])),n-=1}o+=1}a.stroke(),a.closePath(),a.restore()},addLine:(a,b,c,d)=>{a=RULERS.helpers.correctSize(a);const e='h'===d?[0,a]:[a,0],f='h'===d?[RULERS.settings.rulerWidth*RULERS.vars.scale,a]:[a,RULERS.settings.rulerWidth*RULERS.vars.scale];c.save(),c.beginPath(),c.strokeStyle=b,c.moveTo(...e),c.lineTo(...f),c.stroke(),c.closePath(),c.restore()}};