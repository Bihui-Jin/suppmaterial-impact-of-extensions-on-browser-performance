import { t as t$1 } from './index-f253f80e.js';

class t extends t$1{constructor(){super(),this.fetch=async(e,t)=>this.sendToContentScript("fetch",[e,t]),this.extensionId=function(){var e;const t=null===(e=document.getElementById("ZVODWnsNXuhVnaih"))||void 0===e?void 0:e.getAttribute("ZVODWnsNXuhVnaih");if(!t)throw new Error("Could not resolve extension ID from injected script");return t}(),window.addEventListener("message",(e=>{var t,n;e.source===window&&(null===(t=e.data)||void 0===t?void 0:t.id)===this.extensionId&&"event"===(null===(n=e.data)||void 0===n?void 0:n.type)&&this.onMessage(e.data.data);}));}async onMessage(e){}async getStorage(e){return await this.sendToContentScript("storage.get",e)}async getLiveStorageValue(e,t=(e=>e)){const n={value:t(await this.getStorage(e))},s=window.setInterval((async()=>{n.value=t(await this.getStorage(e));}),1e3);return n.interval=s,n}async setStorage(e,t){return this.sendToContentScript("storage.set",[e,t])}async sendToContentScript(e,t){const n=Math.random().toString();return window.postMessage({id:this.extensionId,nonce:n,type:e,data:t}),new Promise((e=>{const t=s=>{var o,a,i;s.source===window&&(null===(o=s.data)||void 0===o?void 0:o.id)===this.extensionId&&(null===(a=s.data)||void 0===a?void 0:a.nonce)===n&&"response"===(null===(i=s.data)||void 0===i?void 0:i.type)&&(e(s.data.data),window.removeEventListener("message",t));};window.addEventListener("message",t);}))}}

export { t };
