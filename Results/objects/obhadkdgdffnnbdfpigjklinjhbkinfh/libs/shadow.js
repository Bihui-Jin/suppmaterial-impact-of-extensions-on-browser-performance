class Shadow{constructor(){this.ws=null,this.is_auth=!1,this.steamid=null,this.ext=null,this.is_debug=!1,this.state_not_logged=!1,this.try_reconnect=0}log(e,t){void 0===t&&(t="info"),"string"==typeof e?console.log("["+t.toUpperCase()+"] "+e):console.log("["+t.toUpperCase()+"]",e)}get_access_token(){return localStorage.getItem(config.token_key)}set_extension(e){this.ext=e,this.ext.change_ext_status(0)}set_access_params(e){localStorage.setItem(config.token_key,e.ext_token),localStorage.setItem("wss_token",e.wss_token),localStorage.setItem("wss_connection",e.wss_connection)}remove_access_token(){localStorage.removeItem(config.token_key)}close_ws_connection(){this.ws&&(this.ws.close(),this.ws=null,console.log("close ws connection"))}connect_socket(){const e=this.ext.get_logged_status();if(2==e||3==e||4==e)return!1;let t=this;if(null!=t.ws)return console.log("Already opened"),!1;if(console.log("[AUTH] try init WS"),t.ws=WsClient.getClient(),t.ws.onError=function(e){t.log("cant connect websocket","error"),t.close_ws_connection(),t.log(e)},t.ws.isReady()&&(t.try_reconnect=1),t.ws.shouldReconnect()){t.try_reconnect=t.try_reconnect+1;var s=1e3*t.try_reconnect;return setTimeout((function(){t.log("try connect_socket","info"),t.close_ws_connection(),t.connect_socket()}),s),!1}t.ws.onOpen=function(){t.log("socket connected.","info"),t.socket_auth()},t.ws.onClose=function(){t.ext.change_ext_status(0),null!=t.ws&&t.ws.close(),t.ws=null,t.try_reconnect=t.try_reconnect+1;var e=1e3*t.try_reconnect;setTimeout((function(){if(console.log("try reconnect"),null!=t.ws)return!1;t.connect_socket()}),e)},t.ws.onMessage=t.socket_onmessage.bind(t)}socket_auth(){let e=this;console.log("need socket auth");let t=chrome.runtime.getManifest().version,s=this.get_access_token();if(null==s){const o=this.check_user();if("success"==o.status)return e.set_access_params(o),s=o.ext_token,void e.send_to_socket("extension_token_auth",{ext_token:s,auth_type:"extension",version:t});e.remove_access_token()}else e.send_to_socket("extension_token_auth",{ext_token:s,auth_type:"extension",version:t})}get_saved_apikey(){if(!this.steamid)return null;let e=this.steamid+"_apikey";return localStorage.getItem(e)}save_api_key(e){if(!this.steamid)return null;let t=this.steamid+"_apikey";localStorage.setItem(t,e)}clear_api_keys(){let e=Object.keys(localStorage);if(!(e&&e.length>0))return;let t=this.steamid+"_apikey";e.forEach((e=>{-1!==e.indexOf("apikey")&&e!==t&&localStorage.removeItem(e)}))}send_apikey(){let e=this.get_access_token();const t=this.get_saved_apikey();this.send_to_socket("setkey",{ext_token:e,steamid:this.steamid,apikey:t})}log_on_backend(e){const t=this.get_access_token();this.send_to_socket("extension_log",{steamid:this.steamid,ext_token:t,message:e})}socket_onmessage(e){let t=this;if(this.log(e,"debug"),console.log(this.is_auth,e.type),e.type==message_type.AUTH&&"error"===e.status){this.remove_access_token(),this.ws.close(),this.ws=null,this.is_auth=!1;let e=this.check_user();"success"==e.status&&this.set_access_params(e),this.ext.get_logged_status(),this.ext.init_extension()}if(e.type==message_type.AUTH&&"success"===e.status&&void 0!==e.steamid)return this.steamid=e.steamid,this.is_auth=!0,this.try_reconnect=1,this.ext.is_logged_shadowpay=!0,this.ext.change_ext_status(1),this.ext.get_logged_status(),void this.send_apikey();this.is_auth&&e.type==message_type.UPDATE_USER_SETTINGS&&this.ext.update_user_settings_from_back(e),this.is_auth&&e.type==message_type.SEND_OFFER&&this.send_trade(e),this.is_auth&&e.type==message_type.FORCE_SEND_OFFER&&this.force_send_trade(e),this.is_auth&&e.type==message_type.ACCEPT_OFFER&&this.accept_trade(e),this.is_auth&&e.type==message_type.CANCEL_OFFER&&this.reject_steam_trade(e,"cancel"),this.is_auth&&e.type==message_type.DECLINE_OFFER&&this.reject_steam_trade(e,"decline"),this.is_auth&&e.type==message_type.ACCEPT_EXT_OFFER&&this.accept_ext_trade(e),e.type==message_type.LOGOUT_EXT&&this.ext.logout(),e.type==message_type.LOGIN_EXTENSION&&this.ext.init_extension().then((()=>{this.ext.online=!0,this.set_user_online(!0)})),e.type==message_type.IS_AUTH_SHP&&t.send_to_socket(message_type.IS_AUTH_SHP,{is_logged:this.ext.is_logged_shadowpay,steamid:t.steamid}),e.type==message_type.UPDATE_SETTINGS&&(t.ext.settings={},t.ext.get_settings()),e.type==message_type.IS_AUTH_STEAM&&this.ext.check_steam_is_logged((function(e){0==e&&t.ext.open_new_tab("https://steamcommunity.com/login",!0,!1,(function(e){})),t.send_to_socket(message_type.IS_AUTH_STEAM,{is_logged:e,steamid:t.steamid})}))}set_user_online(e){e||(e=!1);let t=$.ajax({type:"POST",url:config.api_url_2+"set_user_online_by_token?token="+config.api_key,data:{ext_token:this.get_access_token(),is_online:e?1:0},async:!1});return JSON.parse(t.response)}async send_trade(e){return await this.ext.check_steam_logged(),1!==this.ext.get_logged_status()?(console.info("login"),!1):!!this.check_token(e)&&void this.ext.send_trade_offer(e.data,!1)}async force_send_trade(e){return await this.ext.check_steam_logged(),1!==this.ext.get_logged_status()?(console.info("login"),!1):!!this.check_token(e)&&void this.ext.send_trade_offer(e.data,!0)}async accept_trade(e){return await this.ext.check_steam_logged(),1!==this.ext.get_logged_status()?(console.info("accept trade: invalid login"),!1):this.check_token(e)?void this.ext.accept_trade(e.data):(console.info("accept trade: invalid token"),!1)}async reject_steam_trade(e,t){return await this.ext.check_steam_logged(),1!==this.ext.get_logged_status()?(console.info(`${t} trade: invalid login`),!1):this.check_token(e)?void this.ext.reject_trade(e.data,t):(console.info(`${t} trade: invalid token`),!1)}async accept_ext_trade(e){if(await this.ext.check_steam_logged(),1!==this.ext.get_logged_status())return console.info("login"),!1;this.ext.accept_ext_trade(e.data)}check_token(e){const t=this.get_access_token();return!(!e.token||e.token!==t)||(console.info("token needed"),!1)}send_to_socket(e,t){this.ws.isReady()&&this.ws.send(e,t)}get_user_trades(e){null==this.steamid?(console.error("invalid steamid"),e(!1)):$.post(config.api_url_2+"user_trades?token="+config.api_key,{steamid:this.steamid,ext_token:this.get_access_token()},(function(t){e(t)}))}get_user_data(){let e=$.ajax({type:"POST",url:config.api_url_2+"get_user_data_by_token?token="+config.api_key,data:{ext_token:this.get_access_token()},async:!1});return JSON.parse(e.response)}check_user(){let e=$.ajax({type:"POST",url:config.api_url_2+"get_user_data_by_token?token="+config.api_key,async:!1});return JSON.parse(e.response)}get_offers_page(e){$.get("https://steamcommunity.com/profiles/"+this.steamid+"/tradeoffers",(function(t){let s=[];$.each($(t).find(".link_overlay"),(function(e,t){s.push(parseInt(/(\d+)/.exec($(t).attr("onclick"))[1]))})),e(s)}))}get_api_key(){let e=$.ajax({type:"GET",url:"https://steamcommunity.com/dev/apikey",async:!1}).response;return this.parse_api_key(e)||!1}parse_api_key(e){let t=e.replace(/\s/g,""),s=-1===t.indexOf("https://steamcommunity.com/dev/registerkey"),o="";const n=(o=o=t.substring(t.indexOf("g_sessionID=")+13,t.length)).substring(0,o.indexOf('"')).toString();if(n&&sessionStorage.setItem("sid",n),!s)return this.create_api_key();let i=t.substring(t.indexOf("bodyContents_ex"),t.lastIndexOf("smallForm")),a="";return a=(a=i.substring(i.indexOf("</h2><p>"),i.indexOf("</p><p>"))).substring(a.indexOf(":")+1,a.length),!!a&&!!this.steamid&&(this.save_api_key(a),a)}create_api_key(){const e=sessionStorage.getItem("sid");let t=$.ajax({type:"POST",url:"https://steamcommunity.com/dev/registerkey",data:{domain:"localhost",agreeToTerms:"agreed",sessionid:e},async:!1}).response;return this.parse_api_key(t)||!1}set_steamtrade(e,t,s,o){null==this.steamid?(console.error("invalid steamid"),o(!1)):$.post(config.api_url_2+"set_steamtrade_tradeofferid?token="+config.api_key,{id:e,assetid:s,tradeofferid:t,ext_token:this.get_access_token()},(function(e){o(e)}))}update_user_settings(e,t){null==this.steamid?(console.error("invalid steamid"),"function"==typeof t&&t(!1)):$.post(config.api_url_2+"set_extension_settings?token="+config.api_key,{chrome_notification:e.chrome_notification?1:0,chrome_sound_notification:e.chrome_sound_notification?1:0,redirect_to_timer:e.redirect_to_timer?1:0,ext_auto_accept:e.ext_auto_accept?1:0,ext_token:this.get_access_token()},(function(e){"function"==typeof t&&t(e)}))}make_offer_report(e,t,s,o){null==this.steamid?(console.error("invalid steamid"),o(!1)):$.post(config.api_url_2+"set_steamtrade_tradeofferids?token="+config.api_key,{id:e,assetid:s,data:JSON.stringify(t),ext_token:this.get_access_token()},(function(e){o(e)}))}finish_external_trade(e,t){$.post(config.api_url_2+"finish_external_trade?token="+config.api_key,{id:e,ext_token:this.get_access_token()},(function(e){"function"==typeof t&&t(e)}))}finish_trade(e,t,s){$.post(config.api_url_2+"finish_trade?token="+config.api_key,{id:e,tradeofferid:t,ext_token:this.get_access_token()},(function(e){"function"==typeof s&&s(e)}))}get_settings(e){$.get(config.api_url_2+"settings?token="+config.api_key,(function(t){"function"==typeof e&&e(t)}))}set_not_logged(e){0==this.state_not_logged&&(this.state_not_logged=!0,$.get(config.api_url_2+"not_logged?token="+config.api_key,{ext_token:this.get_access_token()},(function(t){"function"==typeof e&&e(t)})))}reject_trade(e,t){null==this.steamid?(console.error("invalid steamid"),void 0!==t&&t(!1)):$.post(config.api_url_2+"reject_trade_ext?token="+config.api_key,{id:e,ext_token:this.get_access_token()},(function(e){void 0!==t&&t(e)}))}show_notification(e,t,s){var o={type:"basic",title:e,message:t,priority:1,requireInteraction:!0,iconUrl:"/assets/images/logo.png"};chrome.notifications.create(s.toString(),o,(function(e){console.log("id:",e)}));const n=this;chrome.notifications.onClicked.addListener((function(e){if(localStorage.getItem("openedNotification")==e)return!1;n.ext.open_new_tab(config.host+"profile?token="+e,!0,!1,(function(e){console.info("opened")})),localStorage.setItem("openedNotification",e),chrome.notifications.clear(e)})),chrome.notifications.onButtonClicked.addListener((function(e){chrome.notifications.clear(e)}))}}