class Extension{constructor(){this.sh=new Shadow,this.token=null,this.offers_tracking=!1,this.sh.set_extension(this),this.offers_list=[],this.offers_state={},this.send_trades=[],this.accept_trades=[],this.active_ex_trades=[],this.tradeoffers_tab=null,this.tradeoffers_sent_tab=null,this.trade_tabs={},this.is_logged_shadowpay=!1,this.is_logged_steam=!1,this.open_trade_offers_active=!1,this.settings=[],this.user_settings=[],this.windows={},this.user={},this.timer=3e3,this.online=!1,this.user_item=[],this.sum_items=0,this.get_settings()}connect(){return this.sh.connect_socket()}runtime_listner(e,t,s){if(e.type==status_type.UPDATE_USER_SETTINGS&&(this.user_settings=e.user_settings,this.update_user_settings_in_back(e.user_settings)),e.type==status_type.LOGIN_EXTENSION){if(!0===this.sh.is_auth&&!0===this.online)return void s({status:"success"});this.init_extension(!0).then((()=>{this.sh.set_user_online(!0),this.online=!0,s({status:"success"})}))}if(e.type==status_type.CHECK_LOGGED_STATUS&&this.init_extension(!0).then((()=>{const e=this.get_logged_status();s({status:e,steamid:this.sh.steamid,user:this.user,user_items:this.user_items,sum_items:this.sum_items})})),e.type==status_type.TRADE_OFFER&&s({status:1,send_trades:this.send_trades,accept_trades:this.accept_trades,ex_trades:this.active_ex_trades,settings:this.settings,user:this.user}),e.type==status_type.SEND_EX_TRADE_ID){const t=this;t.active_ex_trades=t.active_ex_trades.filter((t=>t.id!==e.id)),sessionStorage.setItem(`extoffer_${e.id}`,e.tradeofferid),s({status:1})}if(e.type==status_type.SEND_ACCEPT_TRADE_ID){const t=this;this.sh.finish_trade(e.id,e.tradeofferid,(i=>{sessionStorage.setItem(`acceptoffer_${e.id}`,e.tradeofferid),"success"!==i.status&&s({status:0}),t.accept_trades=t.accept_trades.filter((t=>t.id!==e.id)),s({status:1})}))}if(e.type==status_type.SEND_TRADEOFFER_ID){const t=this;this.sh.set_steamtrade(e.id,e.tradeofferid,e.assetid,(i=>{sessionStorage.setItem(`offer_${e.id}`,e.tradeofferid),"success"!==i.status&&s({status:0}),t.open_modal_page(e.id),t.send_trades=t.send_trades.filter((t=>t.id!==e.id)),s({status:1})}))}}execute_trades(e){console.log("execute_trades"),this.send_trades=e,this.is_logged_steam&&this.is_logged_shadowpay&&this.send_trades.length>0&&this.open_trade_offers(this.send_trades,"internal")}execute_external_trades(e){console.log("external_trade"),this.active_ex_trades=e,this.is_logged_steam&&this.is_logged_shadowpay&&this.active_ex_trades.length>0&&this.open_trade_offers(this.active_ex_trades,"external")}collect_statistic(){const e={};return e.steamid=this.sh.steamid,e.is_logged_shadowpay=this.is_logged_shadowpay,e.is_logged_steam=this.is_logged_steam,e.token=this.token,e.version=chrome.runtime.getManifest().version,e.ext_id=chrome.runtime.id,e.platform=null,chrome.runtime.getPlatformInfo((t=>{e.platform=t})),e}get_trade_token(e){const t=new RegExp("steamcommunity.com/tradeoffer/new/\\?partner=(\\d+)&token=(\\S+)").exec(e);return t?{partner:t[1],token:t[2],steamid:(BigInt(76561197960265730)+BigInt(t[1])).toString()}:null}async get_access_token(e=!1){if(null!==this.token)return this.token;const t=this.sh.get_access_token();if(null!==t&&!e)return t;const s=ext.sh.check_user();return"success"!==s.status?Promise.reject(s):(this.sh.set_access_params(s),s.ext_token)}change_ext_status(e){console.log(`set status = ${e}`),1==e?(chrome.browserAction.setBadgeText({text:badge_text.MESSAGE_ON}),chrome.browserAction.setBadgeBackgroundColor({color:badge_color.MESSAGE_ON}),chrome.browserAction.setIcon({path:"assets/images/logo.png"})):(chrome.browserAction.setBadgeText({text:badge_text.MESSAGE_OFF}),chrome.browserAction.setBadgeBackgroundColor({color:badge_color.MESSAGE_OFF}))}open_new_tab(e,t,s,i){chrome.tabs.create({url:e,active:t,pinned:s},(e=>{i(e)}))}open_trade_offers(e,t){const s=this;if(this.open_trade_offers_active)return console.log("open_trade_offers_active"),!1;this.open_trade_offers_active=!0,e.forEach((e=>{if(void 0===s.trade_tabs[e.id]&&(1==e.request_type&&null==s.tradeoffers_tab&&s.track_offers(t),2==e.request_type)){if(parseInt(e.steam_tradeofferid)>0)return!1;if(null!=e.steam_tradeofferids)return!1;if(1==e.seller_sold)return!1;s.find_item_inventory(e.items[0].steam_asset_id,e.items[0].steam_market_hash_name,(t=>{t?1==s.settings.EXTENSION_STELS_TRADE?s.open_new_tab(`${e.trade_link}#${e.id}`,!1,!0,(t=>{s.trade_tabs[e.id]=t.id})):s.open_new_tab(`${e.trade_link}#${e.id}`,!0,!1,(t=>{s.trade_tabs[e.id]=t.id})):s.sh.reject_trade(e.id)}))}})),setTimeout((()=>{s.open_trade_offers_active=!1}),500)}send_offer(e){this.settings.EXTENSION_STELS_TRADE;const t=`${e.tradelink}#${e.id}`;if(sessionStorage.getItem(`offer_${e.id}`))return console.info(`Tradeoffer: ${e.id} already sent`),!1;this.sh.show_notification("New trade","Please, confirm it in steam mobile application",e.id),-1===this.send_trades.findIndex((t=>t.id==e.id))&&this.send_trades.push(e),this.open_new_tab(t,!1,!0,(()=>{console.info("process callback")}))}accept_trade(e){return this.user_settings.ext_auto_accept?e.tradeofferid?sessionStorage.getItem(`acceptoffer_${e.id}`)?(this.sh.log_on_backend(`Tradeoffer: ${e.id} already accepted`),console.info(`Tradeoffer: ${e.id} already accepted`),!1):(-1===this.accept_trades.findIndex((t=>t.id===e.id))&&this.accept_trades.push(e),void this.accept_offer_ajax(e)):(this.sh.log_on_backend(`Tradeoffer: ${e.id} empty tradeofferid`),console.info(`Tradeoffer: ${e.id} empty tradeofferid`),!1):(console.info("Tradeoffer: autoaccept off"),!1)}reject_trade(e,t){return e.tradeofferid?sessionStorage.getItem(`${t}offer_${e.id}`)?(this.sh.log_on_backend(`Tradeoffer: ${e.id} already ${t}-ed`),console.info(`Tradeoffer: ${e.id} already ${t}-ed`),!1):void this.reject_offer_ajax(e,t):(this.sh.log_on_backend(`Tradeoffer: ${e.id} empty tradeofferid on ${t}`),console.info(`Tradeoffer: ${e.id} empty tradeofferid on ${t}`),!1)}accept_offer_ajax(e){this.get_steam_session((t=>{const s={sessionid:t,serverid:"1",tradeofferid:e.tradeofferid},i=this;sendRequest({type:"POST",url:`https://steamcommunity.com/tradeoffer/${e.tradeofferid}/accept`,dataType:"json",data:s}).then((()=>{sessionStorage.setItem(`acceptoffer_${e.tradeofferid}`,e.tradeofferid)})).catch((t=>{i.sh.log_on_backend(`couldn't accept trade in api, id: ${e.tradeofferid} data: ${t.responseText}`),console.log("couldn't accept trade in api")}))}))}reject_offer_ajax(e,t){this.get_steam_session((s=>{const i={sessionid:s},o=this;sendRequest({type:"POST",url:`https://steamcommunity.com/tradeoffer/${e.tradeofferid}/${t}`,dataType:"json",data:i}).then((()=>{sessionStorage.setItem(`${t}offer_${e.tradeofferid}`,e.tradeofferid)})).catch((s=>{o.sh.log_on_backend(`couldn't ${t} trade in api, id: ${e.tradeofferid} data: ${s.responseText}`),console.log(`couldn't ${t} trade in api`)}))}))}accept_ext_trade(e){return e.tradeofferid?sessionStorage.getItem(`extoffer_${e.id}`)?(console.info(`Tradeoffer: ${e.id} already accepted`),!1):(-1===this.active_ex_trades.findIndex((t=>t.id==e.id))&&this.active_ex_trades.push(e),void this.open_offer(e.tradeofferid)):(console.info(`Tradeoffer: ${e.id}empty tradeofferid`),!1)}get_tradelink_url(e,t){return`http://steamcommunity.com/tradeoffer/new?partner=${e}&token=${t}`}valid_offer(e,t){return e.steam_tradeofferid==t||null!=e.steam_tradeofferids&&-1!==e.steam_tradeofferids.indexOf(parseInt(t))}track_offers(e){const t=this;this.sh.get_offers_page((s=>{t.offers_list=s,t.sh.log(t.offers_list,"info"),t.sh.check_trades((s=>{t.sh.log(s,"info");let i=!1;s.length>0&&0==t.offers_list.length&&(i=!0),s.length>0&&t.offers_list.length>0&&(i=!0,t.offers_list.forEach((o=>{s.forEach((s=>{"internal"==e&&t.valid_offer(s,o)&&(t.open_offer(o),i=!1),"external"==e&&t.valid_offer(s,o)&&(t.open_offer(o),i=!1)}))})))}))}))}open_offer(e){this.open_new_tab(`https://steamcommunity.com/tradeoffer/${e}`,!1,!0,(e=>{}))}open_sent_pages(){const e=this;null==e.tradeoffers_sent_tab?e.open_new_tab(`https://steamcommunity.com/profiles/${this.sh.steamid}/tradeoffers/sent/`,!0,!0,(t=>{e.tradeoffers_sent_tab=t.id})):(chrome.tabs.reload(e.tradeoffers_sent_tab),chrome.tabs.update(e.tradeoffers_sent_tab,{active:!0}))}open_modal_page(e){const t=this;t.user_settings.redirect_to_timer&&(null==t.tradeoffers_sent_tab?t.open_new_tab(`${config.host}profile?token=${e}`,!0,!0,(e=>{t.tradeoffers_sent_tab=e.id})):(chrome.tabs.reload(t.tradeoffers_sent_tab),chrome.tabs.update(t.tradeoffers_sent_tab,{active:!0,url:`${config.host}profile?token=${e}`})))}get_steam_session(e){const t=/g_sessionID = "([a-z0-9]+)"/g;$.get(`https://steamcommunity.com/profiles/${this.sh.steamid}`,(s=>{const i=t.exec(s);2==i.length&&e(i[1])}))}check_steam_is_logged(e){$.ajax({type:"GET",url:"https://steamcommunity.com/actions/GetNotificationCounts",timeout:2e3,success(t,s,i){"success"==s&&e(!0)},error(t,s){e(!1)}})}check_steam_logged_reqest(){const e=this;return new Promise(((t,s)=>{$.ajax({type:"GET",url:"https://steamcommunity.com/",timeout:2e3,async:!1,success(s,i,o){if("success"==i){if(e.is_logged_shadowpay&&s.includes(e.sh.steamid))return t(!0),!0;if(!e.is_logged_shadowpay&&s.includes("javascript:Logout();"))return t(!0),!0;t(!1)}},error(e,s){t(!0)}})}))}check_steam_logged(){this.check_steam_logged_reqest().then((e=>{if(0==e)return this.is_logged_steam=!1,this.open_login_window(),this.logout(),null!==this.sh.ws&&(this.sh.ws.close(),this.sh.ws=null),!1;this.is_logged_steam=!0})).catch((e=>{console.log(`check_steam_logged.catch.error: ${e}`)}))}get_api_key(){return this.sh.get_api_key()}open_login_window(){if(this.user_items.length<=0)return!1;const e=(new Date).getTime();return sessionStorage.getItem("steam_login_date")?e-parseInt(sessionStorage.getItem("steam_login_date"))>=21669595?(ext.open_steam_window("https://steamcommunity.com/login#shadowpay_login"),sessionStorage.setItem("steam_login_date",e.toString()),!0):void 0:(ext.open_steam_window("https://steamcommunity.com/login#shadowpay_login"),sessionStorage.setItem("steam_login_date",e.toString()),!0)}async init_extension(e=!1){return this.get_access_token(e).then((async e=>{if(!e)return void self.sh.log("invalid token","error");this.is_logged_shadowpay=!0;const t=this.sh.get_user_data();if("success"!==t.status)throw"error";this.user_items=t.pending_items||[],this.sum_items=t.sum_items,this.user={name:t.name,steamid:t.steamid,avatar:t.avatar},this.sh.steamid=t.steamid,this.update_user_settings_from_back(t?.settings||{},!0),await this.check_steam_logged(),this.is_logged_steam&&(this.sh.clear_api_keys(),this.get_api_key()),this.sh.close_ws_connection(),this.connect()})).catch((async e=>{this.is_logged_shadowpay=!1,this.sh.remove_access_token(),await this.check_steam_logged(),this.get_logged_status()}))}update_user_settings_in_back(){this.sh.update_user_settings(this.user_settings)}update_user_settings_from_back(e){this.user_settings={chrome_notification:"1"==e?.chrome_notification,chrome_sound_notification:"1"==e?.chrome_sound_notification,redirect_to_timer:"1"==e?.redirect_to_timer,ext_auto_accept:"1"==e?.ext_auto_accept},chrome.runtime.sendMessage({type:status_type.UPDATE_USER_SETTINGS,user_settings:this.user_settings})}get_user_inventory(e){$.get(`https://steamcommunity.com/profiles/${this.sh.steamid}/inventory/json/730/2/?trading=1`,(t=>{const s={};$.map(t.rgInventory,((e,i)=>{s[e.id]={market_hash_name:t.rgDescriptions[`${e.classid}_${e.instanceid}`].market_hash_name,id:e.id,classid:e.classid,instanceid:e.instanceid}})),e(s)}))}find_item_inventory(e,t,s){let i=!1,o=!1;this.get_user_inventory((a=>{$.map(a,((t,s)=>!i&&(t.id==e?(i=!0,o=t,!1):void 0))),$.map(a,((e,s)=>!i&&(e.market_hash_name==t?(i=!0,o=e,!1):void 0))),s(o)}))}logout(){this.online=!1}send_trade_offer(e,t){if(sessionStorage.getItem(`offer_${e.id}`)&&!t)return console.info(`Tradeoffer: ${e.id} already sent`),!1;-1===this.send_trades.findIndex((t=>t.id==e.id))&&this.send_trades.push(e);const s=this.get_trade_token(e.tradelink);this.send_offer_ajax(s,e)}send_offer_ajax(e,t){const s=this;let i=`{"newversion":true,"version":${730==t.project?2:4},"me":{"assets":[{"appid":"${t.project}","contextid":"2","amount":1,"assetid":"${t.assetid}"}],"currency":[],"ready":false},"them":{"assets":[],"currency":[],"ready":false}}`;t.json_tradeoffer&&(i=t.json_tradeoffer),this.get_steam_session((o=>{const a={sessionid:o,serverid:1,partner:e.steamid,tradeoffermessage:"",json_tradeoffer:i,captcha:"",trade_offer_create_params:JSON.stringify({trade_offer_access_token:e.token})};sendRequest({type:"POST",url:"https://steamcommunity.com/tradeoffer/new/send",dataType:"json",data:a}).then((e=>{s.user_settings.chrome_notification&&s.sh.show_notification("New trade","Please, confirm it in steam mobile application",t.id),s.make_offer_report(e,t)})).catch((e=>{s.make_offer_report(e.response,t)}))}))}make_offer_report(e,t){const s=this;this.sh.make_offer_report(t.id,e,t.assetid,(i=>{if(e.tradeofferid){const i=e.tradeofferid;sessionStorage.setItem(`offer_${t.id}`,i),s.open_modal_page(t.id)}s.send_trades=s.send_trades.filter((e=>e.id!==t.id))}))}getCookies(e,t,s){chrome.cookies.get({url:e,name:t},(e=>{s&&s(e.value)}))}open_steam_window(e){const t=sessionStorage.getItem("steam_window");null!=t?chrome.windows.getAll({},(s=>{let i=!1;s.forEach((e=>{parseInt(e.id)==parseInt(t)&&(i=!0,chrome.windows.update(e.id,{focused:!0}))})),0==i&&chrome.windows.create({url:e,width:1e3,height:700,left:100},(e=>{sessionStorage.setItem("steam_window",e.id)}))})):chrome.windows.create({url:e,width:1e3,height:700,left:100},(e=>{sessionStorage.setItem("steam_window",e.id)}))}get_settings(){const e=this;this.sh.get_settings((t=>{"success"==t.status&&(delete t.status,e.settings=t,console.log("settings updated"))}))}is_shadowpay_logged(){return!!this.is_logged_shadowpay}get_logged_status(){let e=0;return 0==this.is_logged_steam&&(e=2),0==this.is_logged_shadowpay&&(e=3),0==this.is_logged_steam&&0==this.is_logged_shadowpay&&(e=4),this.is_logged_steam&&this.is_logged_shadowpay&&(e=1),1==e&&(this.sh.state_not_logged=!1),console.log("change_ext_status",e),this.change_ext_status(e),e}}console.group("Extension");const ext=new Extension,beforeSent=function(e){let t=null;t=e.url;let s=e.method,i=/https:\/\/steamcommunity.com\/tradeoffer\/new\/send/gi;switch(!0){case/https:\/\/steamcommunity.com\/tradeoffer\/(\d+)\/accept/gi.test(t)&&"POST"===s.toUpperCase():t=t.replace("/accept","");break;case i.test(t)&&"POST"===s.toUpperCase():t=t.replace("/send","");break;default:t=null}return t&&(s=e.requestHeaders.find((e=>"referer"===e.name.toLowerCase())),void 0!==s?e.requestHeaders[s].value=t:e.requestHeaders.push({name:"Referer",value:t})),{requestHeaders:e.requestHeaders}};var sendRequest=function(e){return new Promise(((t,s)=>$.ajax(e).done(t).fail(s)))};function setDeceleratingTimeout(e){var t=function(){let s;s=ext.is_logged_shadowpay&&ext.is_logged_steam?9e5:12e4,window.setTimeout(t,s),e()};window.setTimeout(t)}chrome.windows.onRemoved.addListener((()=>{chrome.windows.getAll((e=>{e.length<=0&&ext.sh.set_user_online(!1)}))})),chrome.windows.onCreated.addListener((()=>{chrome.windows.getAll((e=>{e.length>0&&ext.sh.set_user_online(!0)}))})),chrome.webRequest.onBeforeSendHeaders.addListener(beforeSent,{urls:["https://steamcommunity.com/tradeoffer/*"]},["requestHeaders","blocking","extraHeaders"]),"undefined"!=typeof chrome?(chrome.runtime.onMessage.addListener(((e,t,s)=>(ext.runtime_listner(e,t,s),!0))),chrome.runtime.onMessageExternal.addListener(((e,t,s)=>{ext.runtime_listner(e,t,s)})),chrome.tabs.onRemoved.addListener(((e,t)=>{ext.tradeoffers_sent_tab==e&&(ext.tradeoffers_sent_tab=null)})),ext.init_extension(!0).then((()=>{ext.get_logged_status()}))):console.error("run not on extension");